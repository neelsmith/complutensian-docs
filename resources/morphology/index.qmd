---
engine: julia
title: Morphological data
---


```{julia}
#| echo: false
#| warn: false
#| output: false
using Pkg
Pkg.add("OpenScripturesHebrew")
Pkg.add("BrownDriverBriggs")
Pkg.add("Kanones")
Pkg.add("Tabulae")
Pkg.add("CitableParserBuilder")
```


## Hebrew

We are working with two existing sets of data with morphological annotations on the Hebrew Bible.


### Open Scriptures Hebrew Bible

The [Open Scriptures Hebrew Bible](https://hb.openscriptures.org) project (OSHB) includes manual annotations on everyword of the Hebrew Bible, including a detailed morphological analysis. Lexemes are identified with Strong numbers. The OSHB data set is available on [github here](https://github.com/openscriptures/morphhb).




#### Julia package

Neel Smith has published `OpenScripturesHebrew.jl`, a Julia package for working with the OSHB data set. (See the [package documentation](https://neelsmith.quarto.pub/openscriptureshebrew/).)

#### Example of usage

```{julia}
#| warn: false
#| output: false
using OpenScripturesHebrew
allwords = tanakh()
```
```{julia}
length(allwords)
```
```{julia}
allwords[3]
```
```{julia}
allwords[3].mtoken
```
```{julia}
parseword(allwords[3])
```


### Sefaria

The [Sefaria project](https://www.sefaria.org/texts) makes its data available through an API [documented here](https://developers.sefaria.org/reference/getting-started-with-your-api). The API includes an option to [search Sefaria's online lexica](https://developers.sefaria.org/reference/get_api-words-word) for articles based on any form of a Hebrew word. Sefaria's search results include identifiers for the Brown-Driver-Briggs lexicon (among others), which for our morphological anlayses are often more helpful than the Strong identifiers used by OSHB. While the Sefaria queries do not include detailed morphological analysis, it is possible to find part of speech codes in the related data, taken from Strong.

#### Precompiled data sets

The response time to a query using Sefaria's API is typically in tenths of a second. While this is perfectly adequate for interactive usage, it is impractical for application to a corpus with more than 400,000 words. (A single pass over the Hebrew Bible would require more than 11 hours to process 400,000 queries × 0.1 second = 40,000 seconds). In practice, automated runs of queries often result in time-out errors after only a few hundred queries.  For our morphological analysis therefore, we have compiled a set of static files with Sefaria's resolution of every verb form to a lemma (dictionary form) and an idenfier in Brown-Driver-Briggs. The files (one for each book of the Hebrew Bible) are in delimited text format following this example:

```
urn|form|lemma|bdbid
urn:cts:compnov:bible.genesis.masoretic_tokens:1.1.2|בָּרָ֣א|בָּרָא|BDB01439
```

####  Interactive use

Neel Smith has published `BrownDriverBriggs.jl`, a Julia package for working with the Sefaria API's dynamically. (See the [documentation](https://neelsmith.quarto.pub/browndriverbriggs/).)

#### Example of usage

```{julia}
using BrownDriverBriggs 
articles = bdb("בָּרָ֣א")
```



## Greek

We’re using the [Kanones system](https://neelsmith.quarto.pub/kanones) to build Greek parsers tailored to the corpora of the Complutensian’s Greek documents.

The current version of the Greek parser for the Septuagint is available at `http://shot.holycross.edu/morphology/complutensian-current.cex`.


### Example of usage

```{julia}
using Kanones, CitableBase
greekurl = "http://shot.holycross.edu/morphology/complutensian-current.cex"
greekparser = kParser(greekurl, UrlReader)
```
```{julia}
goodparses = parsetoken("ἀγαθός", greekparser)
```
## Latin



We're using the [Tabulae system](https://neelsmith.quarto.pub/tabulae/) to build Latin parsers tailored to the corpora of the Complutensian's Latin documents.

The current versions of our parsers for Latin documents are available here:

- for the 25-letter orthography of the Vulgate: `http://shot.holycross.edu/tabulae/complut-lat25-current.cex`
- for the 23-letter orthography of the Latin glosses: `http://shot.holycross.edu/tabulae/complut-lat23-current.cex`




### Example of usage

```{julia}
using Tabulae
url = "http://shot.holycross.edu/tabulae/complut-lat25-current.cex"
latinparser = tabulaeStringParser(url, UrlReader)
```




```{julia}
latinparses = parsetoken("creavit", latinparser)
```